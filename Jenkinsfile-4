def timeInMillis = currentBuild.timeInMillis  // time since the epoch when the build was scheduled
def imageTag = "darinpope/alpine:" + timeInMillis // create image tag
@Library("shared-library") _
pipeline {
  agent any
  environment {
    DH_CREDS=credentials('dh-creds') // credential for dockerhub in Jenkins credentials
  }
  stages {
    stage('Hello') {
      steps {
        sh """
          echo "FROM alpine:latest" > Dockerfile // build a dockerfile
          docker build -t ${imageTag} .
        """
        sh '''
          echo $DH_CREDS_PSW | docker login --username=$DH_CREDS_USR --password-stdin // login to image dockerhub; 
        '''
        script {
          def sha256 = sh(returnStdout: true, script:"docker push ${imageTag} | grep sha256 | awk -F':' '{print \$4}' | awk '{print \$1}'").trim() // do a docker push an grep out from sha256
          // Docker uses a content-addressable image store, and the image ID is a SHA256 digest covering the image's configuration and layers ... https://www.movable-type.co.uk/scripts/sha256.html
          // https://docs.docker.com/engine/reference/commandline/pull/
          // awk tp pull a value from this grepped output
          echo 'print out trimmed sha256'
          echo sha256
          def url = "https://hub.docker.com/layers/" + env.DH_CREDS_USR + "/alpine/" + timeInMillis + "/images/sha256-" + sha256 + "?context=explore" // build url with credentials and sha256 to this docker container image
          addSidebarLink(url:url,text:"Image on Docker Hub",icon:"star.gif")
        }
      }
      post {
        always {
          sh 'docker logout'
        }
      }
    }
  }
}
